/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nerduino.processing.app;

import com.nerduino.library.NerduinoBase;
import java.util.ArrayList;
import javax.swing.JPanel;
import org.openide.awt.StatusDisplayer;

/**
 *
 * @author chaselaurendine
 */
public class BoardCompilePanel extends JPanel implements ICompileCallback
{
	ArrayList<JPanel> m_tasks = new ArrayList<JPanel>();
	Board m_board;
	Sketch m_sketch;
	boolean m_success;
	int m_errors;
	
	public BoardCompilePanel(Sketch sketch, Board board)
	{
		initComponents();
		
		m_sketch = sketch;
		
		setBoard(board);
	}

	public Board getBoard()
	{
		return m_board;
	}
	
	public void setBoard(Board board)
	{
		m_board = board;
		
		if (m_board != null)
		{
			jLabel1.setText(m_board.getName());
		}
	}
	
	public void addUpload(NerduinoBase nerd)
	{
		BoardUploadPanel upload = new BoardUploadPanel();
		
		upload.configure(m_sketch, nerd);
		
		m_tasks.add(upload);
		
		if (nerd.getInteractive())
		{
			BoardEngagePanel engage = new BoardEngagePanel();
			
			engage.configure(m_sketch, nerd);
			
			m_tasks.add(engage);
		}
	}
	
	public ArrayList<JPanel> getTasks()
	{
		return m_tasks;
	}
	
	public boolean isSelected()
	{
		return jCheckBox1.isSelected();
	}
	
	public void compile()
	{
		m_success = false;
		m_errors = 0;
		
		Preferences.set("target", "arduino");
		Preferences.set("board", m_board.getShortName());
		
		m_sketch.compile((ICompileCallback) this);
		
		/*
		if (m_success)
		{
			for(IBuildTask task : m_tasks)
			{
				if (task.isSelected())
					task.setProgress(100);
			}
		}
		*/
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jCheckBox1 = new javax.swing.JCheckBox();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        jCheckBox1.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, org.openide.util.NbBundle.getMessage(BoardCompilePanel.class, "BoardCompilePanel.jCheckBox1.text")); // NOI18N

        jProgressBar1.setPreferredSize(new java.awt.Dimension(99, 20));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(BoardCompilePanel.class, "BoardCompilePanel.jLabel1.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 99, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jCheckBox1)
                .add(jLabel1))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jProgressBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

	@Override
	public void setProgress(int progress)
	{
		jProgressBar1.setValue(progress);		
	}

	@Override
	public void setCompileSuccess(boolean success)
	{
		m_success = success;
		
		if (success)
		{
			jCheckBox1.setForeground(new java.awt.Color(102, 255, 102));
			jLabel1.setForeground(new java.awt.Color(102, 255, 102));
			
			for(JPanel task : m_tasks)
			{
				IBuildTask bt =  (IBuildTask) task;
				
				bt.execute();
			}
		}
		else
		{
			jCheckBox1.setForeground(new java.awt.Color(255, 0, 0));
			jLabel1.setForeground(new java.awt.Color(255, 0, 0));				
		}
	}

	@Override
	public void setStatus(String status)
	{
		StatusDisplayer.getDefault().setStatusText(status);
	}

	public int getErrorCount()
	{
		return m_errors;
	}

	@Override
	public void setErrorCount(int count)
	{
		m_errors = count;
	}

	public void reset()
	{
		jCheckBox1.setForeground(new java.awt.Color(0, 0, 0));
		jLabel1.setForeground(new java.awt.Color(0, 0, 0));
	
		setProgress(0);
		
		// reset all of the child tasks
		for(JPanel task : m_tasks)
		{
			IBuildTask bt =  (IBuildTask) task;

			bt.reset();
		}

	}
}
